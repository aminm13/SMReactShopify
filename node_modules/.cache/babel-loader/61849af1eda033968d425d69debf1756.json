{"ast":null,"code":"import _slicedToArray from\"C:/Users/moham/Desktop/SMWebShopReact/v.4/shopify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,useContext}from'react';import{Alert,Button,Card,Jumbotron,Figure,Col,Row,Table,Badge}from\"react-bootstrap\";import data from'../data.json';import BarcodeScannerComponent from\"react-webcam-barcode-scanner\";import{render}from'@testing-library/react';import Products from\"./Products\";var BarcodeReader=function BarcodeReader(){var _React$useState=React.useState('No Barcode Found'),_React$useState2=_slicedToArray(_React$useState,2),barcodeData=_React$useState2[0],setData=_React$useState2[1];var products=data.products;var productFounded=false;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Title,{variant:\"info\",children:/*#__PURE__*/_jsx(Alert,{variant:\"info\",children:\"Scan Your Product Here\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(BarcodeScannerComponent,{width:300,height:200,onUpdate:function onUpdate(err,result){if(!err){if(result){setData(result.text);}else{setData('No Barcode Found');productFounded=true;}}}})}),/*#__PURE__*/_jsx(Card.Footer,{children:productFounded&&products.filter(function(product){return product.barcode===barcodeData;}).map(function(filteredProduct){return/*#__PURE__*/_jsxs(Figure,{children:[/*#__PURE__*/_jsx(Figure.Image,{width:100,height:100,alt:filteredProduct.title,src:filteredProduct.image}),/*#__PURE__*/_jsxs(Figure.Caption,{children:[/*#__PURE__*/_jsx(\"h3\",{children:filteredProduct.title}),/*#__PURE__*/_jsx(\"p\",{children:filteredProduct.description}),/*#__PURE__*/_jsx(Button,{children:\"add to cart\"})]})]});})})]})});};export default BarcodeReader;","map":{"version":3,"sources":["C:/Users/moham/Desktop/SMWebShopReact/v.4/shopify/src/Components/BarcodeReader.js"],"names":["React","useEffect","useContext","Alert","Button","Card","Jumbotron","Figure","Col","Row","Table","Badge","data","BarcodeScannerComponent","render","Products","BarcodeReader","useState","barcodeData","setData","products","productFounded","err","result","text","filter","product","barcode","map","filteredProduct","title","image","description"],"mappings":"gQAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAAyBC,UAAzB,KAA0C,OAA1C,CACA,OAASC,KAAT,CAAeC,MAAf,CAAuBC,IAAvB,CAA6BC,SAA7B,CAAwCC,MAAxC,CAAgDC,GAAhD,CAAqDC,GAArD,CAA0DC,KAA1D,CAAiEC,KAAjE,KAA8E,iBAA9E,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,8BAApC,CACA,OAASC,MAAT,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,qBAEShB,KAAK,CAACiB,QAAN,CAAe,kBAAf,CAFT,oDAEhBC,WAFgB,qBAEHC,OAFG,qBAGxB,GAAMC,CAAAA,QAAQ,CAAGR,IAAI,CAACQ,QAAtB,CACA,GAAIC,CAAAA,cAAc,CAAG,KAArB,CAEA,mBACE,kCACA,MAAC,IAAD,yBACA,KAAC,IAAD,CAAM,KAAN,EAAY,OAAO,CAAC,MAApB,uBACA,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,oCADA,EADA,cAID,KAAC,IAAD,CAAM,IAAN,wBACC,KAAC,uBAAD,EACE,KAAK,CAAE,GADT,CAEE,MAAM,CAAE,GAFV,CAGE,QAAQ,CAAE,kBAACC,GAAD,CAAMC,MAAN,CAAiB,CACzB,GAAG,CAACD,GAAJ,CAAQ,CACR,GAAIC,MAAJ,CAAY,CAACJ,OAAO,CAChBI,MAAM,CAACC,IADS,CAAP,CAGZ,CAHD,IAIK,CACHL,OAAO,CAAC,kBAAD,CAAP,CACAE,cAAc,CAAG,IAAjB,CACH,CAEA,CACA,CAfH,EADD,EAJC,cAwBA,KAAC,IAAD,CAAM,MAAN,WACGA,cAAc,EAGjBD,QAAQ,CAACK,MAAT,CAAgB,SAAAC,OAAO,QAAEA,CAAAA,OAAO,CAACC,OAAR,GAAkBT,WAApB,EAAvB,EAAwDU,GAAxD,CAA4D,SAAAC,eAAe,qBACzE,MAAC,MAAD,yBAEA,KAAC,MAAD,CAAQ,KAAR,EACI,KAAK,CAAE,GADX,CAEI,MAAM,CAAE,GAFZ,CAGI,GAAG,CAAEA,eAAe,CAACC,KAHzB,CAII,GAAG,CAAED,eAAe,CAACE,KAJzB,EAFA,cASA,MAAC,MAAD,CAAQ,OAAR,yBACA,oBAAKF,eAAe,CAACC,KAArB,EADA,cAEA,mBAAID,eAAe,CAACG,WAApB,EAFA,cAIA,KAAC,MAAD,0BAJA,GATA,GADyE,EAA3E,CAJA,EAxBA,GADA,EADF,CA+DH,CArED,CAwEA,cAAehB,CAAAA,aAAf","sourcesContent":["import React, {useEffect,useContext} from 'react';\r\nimport { Alert,Button, Card, Jumbotron, Figure ,Col, Row, Table, Badge } from \"react-bootstrap\";\r\nimport data from '../data.json'\r\nimport BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\r\nimport { render } from '@testing-library/react';\r\nimport Products from \"./Products\";\r\n\r\n\r\nconst BarcodeReader = () => {\r\n    \r\n    const [ barcodeData, setData ] = React.useState('No Barcode Found');\r\n    const products = data.products\r\n    let productFounded = false;\r\n\r\n    return (\r\n      <div>\r\n      <Card>\r\n      <Card.Title variant=\"info\">\r\n      <Alert variant=\"info\">Scan Your Product Here</Alert>\r\n      </Card.Title>\r\n     <Card.Body >\r\n      <BarcodeScannerComponent\r\n        width={300}\r\n        height={200}\r\n        onUpdate={(err, result) => {\r\n          if(!err){\r\n          if (result) {setData(\r\n              result.text\r\n            )\r\n          }\r\n          else {\r\n            setData('No Barcode Found')\r\n            productFounded = true\r\n        }\r\n        \r\n        }\r\n        }}\r\n      />\r\n      \r\n      </Card.Body>\r\n      <Card.Footer >\r\n        {productFounded &&\r\n        \r\n        \r\n      products.filter(product=>product.barcode===barcodeData).map(filteredProduct =>(\r\n        <Figure>\r\n          \r\n        <Figure.Image\r\n            width={100}\r\n            height={100}\r\n            alt={filteredProduct.title}\r\n            src={filteredProduct.image}\r\n        />\r\n        \r\n        <Figure.Caption>\r\n        <h3>{filteredProduct.title}</h3>\r\n        <p>{filteredProduct.description}</p>\r\n\r\n        <Button>\r\n          add to cart\r\n        </Button>\r\n          </Figure.Caption>\r\n        </Figure>\r\n\r\n\r\n  ))\r\n        }\r\n      </Card.Footer>\r\n      \r\n      \r\n\r\n      </Card>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BarcodeReader"]},"metadata":{},"sourceType":"module"}