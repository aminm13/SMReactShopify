{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\moham\\\\Desktop\\\\SMWebShopReact\\\\v.4\\\\shopify\\\\src\\\\Components\\\\BarcodeReader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport { Alert, Button, Card, Jumbotron, Figure, Col, Row, Table, Badge } from \"react-bootstrap\";\nimport data from '../data.json';\nimport BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\nimport { render } from '@testing-library/react';\nimport Products from \"./Products\";\n\nconst BarcodeReader = props => {\n  _s();\n\n  const [barcodeData, setData] = React.useState('No Barcode Found');\n  const products = data.products;\n  const productFounded = true;\n\n  const addToCart = props => {\n    props.addToCart;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        variant: \"info\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          children: \"Scan Your Product Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n          width: 300,\n          height: 200,\n          onUpdate: (err, result) => {\n            if (!err) {\n              if (result) {\n                setData(result.text);\n                productFounded = true;\n              } else {\n                setData('No Barcode Found');\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: productFounded && products.filter(product => product.barcode === \"DRS1\").map(filteredProduct => /*#__PURE__*/_jsxDEV(Figure, {\n          children: [/*#__PURE__*/_jsxDEV(Figure.Image, {\n            width: 100,\n            height: 100,\n            alt: filteredProduct.title,\n            src: filteredProduct.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Figure.Caption, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: filteredProduct.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: filteredProduct.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => this.addToCart(filteredProduct),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"far fa-cart-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this);\n};\n\n_s(BarcodeReader, \"NhrxkYlXfCPgGe0ZKR1vnVwY22I=\");\n\n_c = BarcodeReader;\nexport default BarcodeReader;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarcodeReader\");","map":{"version":3,"sources":["C:/Users/moham/Desktop/SMWebShopReact/v.4/shopify/src/Components/BarcodeReader.js"],"names":["React","useEffect","useContext","Alert","Button","Card","Jumbotron","Figure","Col","Row","Table","Badge","data","BarcodeScannerComponent","render","Products","BarcodeReader","props","barcodeData","setData","useState","products","productFounded","addToCart","err","result","text","filter","product","barcode","map","filteredProduct","title","image","description"],"mappings":"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","sourcesContent":["import React, {useEffect,useContext} from 'react';\r\nimport { Alert,Button, Card, Jumbotron, Figure ,Col, Row, Table, Badge } from \"react-bootstrap\";\r\nimport data from '../data.json'\r\nimport BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\r\nimport { render } from '@testing-library/react';\r\nimport Products from \"./Products\";\r\n\r\n\r\nconst BarcodeReader = (props) => {\r\n    \r\n    const [ barcodeData, setData ] = React.useState('No Barcode Found');\r\n    const products = data.products\r\n    const productFounded = true;\r\n    const addToCart = props=> {props.addToCart}\r\n    return (\r\n      <div>\r\n      <Card>\r\n      <Card.Title variant=\"info\">\r\n      <Alert variant=\"info\">Scan Your Product Here</Alert>\r\n      </Card.Title>\r\n     <Card.Body >\r\n      <BarcodeScannerComponent\r\n        width={300}\r\n        height={200}\r\n        onUpdate={(err, result) => {\r\n          if(!err){\r\n          if (result) {setData(\r\n              result.text\r\n              \r\n            )\r\n            productFounded = true\r\n\r\n          }\r\n          else {\r\n            setData('No Barcode Found');\r\n        }\r\n        \r\n        }\r\n        }}\r\n      />\r\n      \r\n      </Card.Body>\r\n      <Card.Footer >\r\n      {productFounded &&\r\n        \r\n        \r\n        products.filter(product=>product.barcode===\"DRS1\").map(filteredProduct =>(\r\n        <Figure>\r\n          \r\n        <Figure.Image\r\n            width={100}\r\n            height={100}\r\n            alt={filteredProduct.title}\r\n            src={filteredProduct.image}\r\n        />\r\n        \r\n        <Figure.Caption>\r\n        <h3>{filteredProduct.title}</h3>\r\n        <p>{filteredProduct.description}</p>\r\n\r\n        <Button variant=\"success\" onClick={()=> this.addToCart(filteredProduct)} >\r\n            <i class=\"far fa-cart-plus\"></i>\r\n        </Button>\r\n          </Figure.Caption>\r\n        </Figure>\r\n\r\n\r\n        ))\r\n    }\r\n      </Card.Footer>\r\n    </Card>\r\n  </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BarcodeReader"]},"metadata":{},"sourceType":"module"}