{"ast":null,"code":"import _slicedToArray from\"C:/Users/moham/Desktop/SMWebShopReact/v.4/shopify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var _this=this;import React,{useEffect,useContext}from'react';import{Alert,Button,Card,Container,Modal,Col,Row}from\"react-bootstrap\";import data from'../data.json';import BarcodeScannerComponent from\"react-webcam-barcode-scanner\";var BarcodeReader=function BarcodeReader(){var products=data.products.products;var _React$useState=React.useState('No Barcode Found'),_React$useState2=_slicedToArray(_React$useState,2),barcodeData=_React$useState2[0],setData=_React$useState2[1];var _data$products$filter=data.products.filter(function(x){return x.id===barcodeData;}),matchProduct=_data$products$filter.matchProduct;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Title,{variant:\"info\",children:/*#__PURE__*/_jsx(Alert,{variant:\"info\",children:\"Scan Your Product Here\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(BarcodeScannerComponent,{width:300,height:200,onUpdate:function onUpdate(err,result){if(!err){if(result){setData(result.text);}else setData('No Barcode Found');}}})}),/*#__PURE__*/_jsxs(Card.Footer,{hidden:\"true\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"far fa-times-circle\"}),/*#__PURE__*/_jsxs(\"p\",{onChange:function onChange(){return _this.props.showScannedProduct(matchProduct);},children:[barcodeData,\" \"]})]})]})});};export default BarcodeReader;","map":{"version":3,"sources":["C:/Users/moham/Desktop/SMWebShopReact/v.4/shopify/src/Components/BarcodeReader.js"],"names":["React","useEffect","useContext","Alert","Button","Card","Container","Modal","Col","Row","data","BarcodeScannerComponent","BarcodeReader","products","useState","barcodeData","setData","filter","x","id","matchProduct","err","result","text","props","showScannedProduct"],"mappings":"+QAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAAyBC,UAAzB,KAA0C,OAA1C,CACA,OAASC,KAAT,CAAeC,MAAf,CAAuBC,IAAvB,CAA6BC,SAA7B,CAAwCC,KAAxC,CAA+CC,GAA/C,CAAoDC,GAApD,KAA+D,iBAA/D,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,8BAApC,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,IAEhBC,CAAAA,QAFgB,CAEHH,IAAI,CAACG,QAFF,CAEhBA,QAFgB,qBAGSb,KAAK,CAACc,QAAN,CAAe,kBAAf,CAHT,oDAGhBC,WAHgB,qBAGHC,OAHG,+CAIDN,IAAI,CAACG,QAAL,CAAcI,MAAd,CAAqB,SAAAC,CAAC,QAAEA,CAAAA,CAAC,CAACC,EAAF,GAASJ,WAAX,EAAtB,CAJC,CAIjBK,YAJiB,uBAIjBA,YAJiB,CAOxB,mBACE,kCACA,MAAC,IAAD,yBACA,KAAC,IAAD,CAAM,KAAN,EAAY,OAAO,CAAC,MAApB,uBACA,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,oCADA,EADA,cAID,KAAC,IAAD,CAAM,IAAN,wBACC,KAAC,uBAAD,EACE,KAAK,CAAE,GADT,CAEE,MAAM,CAAE,GAFV,CAGE,QAAQ,CAAE,kBAACC,GAAD,CAAMC,MAAN,CAAiB,CACzB,GAAG,CAACD,GAAJ,CAAQ,CACR,GAAIC,MAAJ,CAAY,CAACN,OAAO,CAChBM,MAAM,CAACC,IADS,CAAP,CAGZ,CAHD,IAIKP,CAAAA,OAAO,CAAC,kBAAD,CAAP,CAA4B,CAClC,CAVH,EADD,EAJC,cAmBA,MAAC,IAAD,CAAM,MAAN,EAAe,MAAM,CAAC,MAAtB,wBACA,UAAG,KAAK,CAAC,qBAAT,EADA,cAEA,WAAG,QAAQ,CAAE,0BAAK,CAAA,KAAI,CAACQ,KAAL,CAAWC,kBAAX,CAA8BL,YAA9B,CAAL,EAAb,WAAgEL,WAAhE,OAFA,GAnBA,GADA,EADF,CA+BH,CAtCD,CAyCA,cAAeH,CAAAA,aAAf","sourcesContent":["import React, {useEffect,useContext} from 'react';\r\nimport { Alert,Button, Card, Container, Modal ,Col, Row } from \"react-bootstrap\";\r\nimport data from '../data.json'\r\nimport BarcodeScannerComponent from \"react-webcam-barcode-scanner\";\r\n\r\n\r\n\r\nconst BarcodeReader = () => {\r\n    \r\n    const { products } = data.products\r\n    const [ barcodeData, setData ] = React.useState('No Barcode Found');\r\n    const {matchProduct} = data.products.filter(x=>x.id === barcodeData)\r\n\r\n    \r\n    return (\r\n      <div>\r\n      <Card>\r\n      <Card.Title variant=\"info\">\r\n      <Alert variant=\"info\">Scan Your Product Here</Alert>\r\n      </Card.Title>\r\n     <Card.Body >\r\n      <BarcodeScannerComponent\r\n        width={300}\r\n        height={200}\r\n        onUpdate={(err, result) => {\r\n          if(!err){\r\n          if (result) {setData(\r\n              result.text\r\n            )\r\n          }\r\n          else setData('No Barcode Found')}\r\n        }}\r\n      />\r\n      \r\n      </Card.Body>\r\n      <Card.Footer   hidden=\"true\" >\r\n      <i class=\"far fa-times-circle\"></i>\r\n      <p onChange={()=> this.props.showScannedProduct(matchProduct)}>{barcodeData} </p>\r\n      </Card.Footer>\r\n      </Card>\r\n      \r\n\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BarcodeReader"]},"metadata":{},"sourceType":"module"}